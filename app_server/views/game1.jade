doctype html
html
  head
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    title Tic Tac Toe Game
    style.
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        background-color: #f8f8f8;
        min-height: 100vh;
      }
      .game-wrapper {
        display: flex;
        flex-direction: column;
        justify-content: center; /* Center game vertically in available space */
        align-items: center; /* Center game horizontally */
        flex-grow: 1; /* Allow this to take up remaining vertical space */
        padding: 20px;
        background: #fff;
        border: 2px solid #333;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        width: 90%;
        max-width: 400px;
        max-height: 500px;
        margin: 70px auto; /* Center horizontally with auto margin */
      }
      table {
        margin: 20px auto;
        border-collapse: collapse;
      }
      td {
        width: 60px;
        height: 60px;
        text-align: center;
        font-size: 24px;
        border: 1px solid #000;
        cursor: pointer;
      }
      td:hover {
        background-color: #f0f0f0;
      }
      h2 {
        text-align: center;
        margin-top: 20px;
      }
      #restart-btn {
        margin-top: 15px;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
        background-color: black;
        color: white;
        border: none;
        border-radius: 5px;
      }

      #restart-btn:hover {
        background-color: rgb(44, 44, 44);
        color: rgb(255, 255, 255);
      }
  body
    include layout.jade
    .game-wrapper
      h1 Tic Tac Toe
      table
        tr
          td(onclick='makeMove(this, 0, 0)')
          td(onclick='makeMove(this, 0, 1)')
          td(onclick='makeMove(this, 0, 2)')
        tr
          td(onclick='makeMove(this, 1, 0)')
          td(onclick='makeMove(this, 1, 1)')
          td(onclick='makeMove(this, 1, 2)')
        tr
          td(onclick='makeMove(this, 2, 0)')
          td(onclick='makeMove(this, 2, 1)')
          td(onclick='makeMove(this, 2, 2)')
      h2#result
      button#restart-btn(onclick='restartGame()') Restart Game
    script.
      let board = [
        ['', '', ''],
        ['', '', ''],
        ['', '', '']
      ];
      let currentPlayer = 'X';

      function makeMove(cell, row, col) {
        if (board[row][col] !== '') return;

        board[row][col] = currentPlayer;
        cell.textContent = currentPlayer;

        if (checkWinner()) {
          document.getElementById('result').textContent = `Player ${currentPlayer} wins!`;
          resetBoard();
        } else if (board.flat().every(cell => cell !== '')) {
          document.getElementById('result').textContent = `It's a draw!`;
          resetBoard();
        } else {
          currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
        }
      }

      function checkWinner() {
        for (let i = 0; i < 3; i++) {
          if (board[i][0] === currentPlayer && board[i][1] === currentPlayer && board[i][2] === currentPlayer) return true;
          if (board[0][i] === currentPlayer && board[1][i] === currentPlayer && board[2][i] === currentPlayer) return true;
        }
        if (board[0][0] === currentPlayer && board[1][1] === currentPlayer && board[2][2] === currentPlayer) return true;
        if (board[0][2] === currentPlayer && board[1][1] === currentPlayer && board[2][0] === currentPlayer) return true;
        return false;
      }

      function resetBoard() {
        setTimeout(() => {
          restartGame(); // Reuse restart logic
        }, 2000);
      }

      function restartGame() {
        board = [['', '', ''], ['', '', ''], ['', '', '']];
        const cells = document.querySelectorAll('td');
        cells.forEach(cell => cell.textContent = '');
        currentPlayer = 'X';
        document.getElementById('result').textContent = ''; // Clear the result text
      }
      
